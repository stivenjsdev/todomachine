{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","TodosError/index.js","TodosLoading/index.js","EmptyTodos/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","children","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","console","log","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLocaleLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","TodoCounter","useContext","className","TodoSearch","placeholder","type","onChange","event","target","TodoList","TodoItem","onComplete","onDelete","color","size","onClick","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","e","preventDefault","htmlFor","name","id","TodosError","TodosLoading","props","speed","backgroundColor","foregroundColor","style","width","height","marginTop","x","y","rx","ry","EmptyTodos","AppUI","Fragment","map","App","render","message"],"mappings":"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","file":"static/js/main.90524bb0.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nconst TodoProvider = ({ children }) => {\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error\n    } = useLocalStorage('TODOS_V1', []);\n\n    const [searchValue, setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const completedTodos = todos.filter(todo => todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n\n    // Filtrar lista de TODOs\n    if (!searchValue) {\n        // cuando no se ha escrito nada, van a ser todos\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n            const todoText = todo.text.toLocaleLowerCase();\n            const searchText = searchValue.toLocaleLowerCase();\n            return todoText.includes(searchText);\n        })\n    }\n\n    const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n        saveTodos(newTodos);\n    }\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text\n        });\n        saveTodos(newTodos);\n    }\n\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            addTodo,\n            openModal,\n            setOpenModal\n        }}>\n            {children}\n        </TodoContext.Provider>\n    )\n}\n\nexport { TodoContext, TodoProvider };","import React from 'react';\n\nconst useLocalStorage = (itemName, initialValue) => {\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n\n    // simular que se tarda un rato\n    React.useEffect(() => {\n        console.log('me ejecute')\n        setTimeout(() => {\n            try {\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem = initialValue;\n\n                if (!localStorageItem) {\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\n                } else {\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n\n                setItem(parsedItem);\n                setLoading(false);\n            } catch (error) {\n                // setError(true); o mejor:\n                setError(error);\n            }\n        }, 3000);\n    }, []);\n\n    const saveItem = (newItem) => {\n        try {\n            const stringifiedItem = JSON.stringify(newItem);\n            localStorage.setItem(itemName, stringifiedItem);\n            setItem(newItem);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    return {\n        item,\n        saveItem,\n        loading,\n        error\n    };\n}\n\nexport { useLocalStorage };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css'\n\nconst TodoCounter = () => {\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\n    return (\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    );\n}\n\nexport { TodoCounter };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nconst TodoSearch = () => {\n    const { searchValue, setSearchValue } = React.useContext(TodoContext); \n\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value)\n        setSearchValue(event.target.value)\n    }\n\n    return (\n        <input \n            className=\"TodoSearch\"  \n            placeholder=\"Buscar...\" \n            type=\"text\"\n            value={searchValue}\n            onChange={onSearchValueChange}\n        />\n    );\n}\n\nexport { TodoSearch };","import React from 'react';\nimport './TodoList.css'\n\nconst TodoList = ({ children }) => {\n    return (\n        <section>\n            <ul>\n                {children}\n            </ul>\n        </section>\n    );\n}\n\nexport { TodoList };","import React from 'react';\nimport { FaCheckSquare } from 'react-icons/fa'\nimport { RiCloseCircleFill } from 'react-icons/ri'\nimport './TodoItem.css';\n\nconst TodoItem = ({ text, completed, onComplete, onDelete }) => {\n\n    return(\n        <li className=\"TodoItem\">\n            <FaCheckSquare \n                color={completed ? '#4caf50' : '#fff'} \n                size='20px'\n                className='Icon'\n                onClick={onComplete}\n            />\n            <p className={`TodoItem-p ${completed && 'TodoItem-p--complete'}`}>\n                {text}\n            </p>\n            <RiCloseCircleFill \n                size='22px' \n                className='Icon Icon-delete' \n                onClick={onDelete}\n            />\n        </li>\n    );\n}\n\nexport { TodoItem };","import React from 'react';\nimport './CreateTodoButton.css';\n\nconst CreateTodoButton = ({setOpenModal}) => {\n    const handleClick = () => {\n        setOpenModal(prevState => !prevState);\n    }\n\n    return (\n        <button \n            className=\"CreateTodoButton\"\n            onClick={handleClick}\n        >\n            +\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nexport const Modal = ({ children }) => {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">{children}</div>,\n        document.getElementById('modal')\n    );\n}\n","import React from 'react'\nimport { TodoContext } from '../TodoContext'\nimport './TodoForm.css'\n\nexport const TodoForm = () => {\n    const [newTodoValue, setNewTodoValue] = React.useState('')\n\n    const {\n        addTodo,\n        setOpenModal\n    } = React.useContext(TodoContext)\n\n    const onChange = (e) => {\n        setNewTodoValue(e.target.value)\n    }\n\n    const onCancel = () => {\n        setOpenModal(false)\n    }\n\n    const onSubmit= (e) => {\n        e.preventDefault()\n        addTodo(newTodoValue)\n        setOpenModal(false)\n    }\n\n    return (\n        <form onSubmit={onSubmit} className='TodoForm'>\n            <label htmlFor=\"todo\">\n                Escribe tu nuevo TODO\n                <textarea\n                    value={newTodoValue}\n                    onChange={onChange}\n                    placeholder='Agrega una tarea' \n                    name=\"\" \n                    id=\"todo\"\n                ></textarea>\n            </label>\n            <div className='ButtonContainer'>\n                <button \n                    type='button'\n                    className='Button CancelButton'\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className='Button AddButton'\n                    type='submit'\n                >\n                    Añadir\n                </button>\n            </div>\n\n        </form>\n    )\n}\n","import React from 'react'\n\nexport const TodosError = ({ error }) => {\n    return (\n        <p>\n           Desespérate, hubo un error... \n        </p>\n    )\n}\n","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\nexport const TodosLoading = (props) => {\n    return (\n        <ContentLoader\n            speed={3}\n            backgroundColor=\"#2a333e\"\n            foregroundColor=\"#4c5662\"\n            style={{ width: '100%', height: '220px', marginTop: '20px' }}\n            {...props}\n        >\n            <rect x=\"47\" y=\"6\"   rx=\"4\" ry=\"4\" width=\"100%\" height=\"57\" />\n            <rect x=\"0\"  y=\"6\"   rx=\"4\" ry=\"4\" width=\"40\"   height=\"57\" />\n            <rect x=\"47\" y=\"82\"  rx=\"4\" ry=\"4\" width=\"100%\" height=\"57\" />\n            <rect x=\"0\"  y=\"82\"  rx=\"4\" ry=\"4\" width=\"40\"   height=\"57\" />\n            <rect x=\"47\" y=\"158\" rx=\"4\" ry=\"4\" width=\"100%\" height=\"57\" />\n            <rect x=\"0\"  y=\"158\" rx=\"4\" ry=\"4\" width=\"40\"   height=\"57\" />\n        </ContentLoader>\n    )\n}\n","import React from 'react'\n\nexport const EmptyTodos = () => {\n    return (\n        <p>\n          Crea tu primer TODO!  \n        </p>\n    )\n}\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { Modal } from '../Modal';\nimport { TodoForm } from '../TodoForm';\nimport { TodosError } from '../TodosError';\nimport { TodosLoading } from '../TodosLoading';\nimport { EmptyTodos } from '../EmptyTodos';\n\nconst AppUI = () => {\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal\n    } = React.useContext(TodoContext);\n    return (\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch />\n            <TodoList>\n                {error && <TodosError error={error} />}\n                {loading && <TodosLoading />}\n                {(!loading && !searchedTodos.length) && <EmptyTodos />}\n                {searchedTodos.map(todo => (\n                    <TodoItem\n                        key={todo.text}\n                        text={todo.text}\n                        completed={todo.completed}\n                        onComplete={() => completeTodo(todo.text)}\n                        onDelete={() => deleteTodo(todo.text)}\n                    />\n                ))}\n            </TodoList>\n\n            {!!openModal && (\n                <Modal>\n                    <TodoForm />\n                </Modal>\n            )}\n            <CreateTodoButton\n                setOpenModal={setOpenModal}\n            />\n        </React.Fragment>\n    );\n}\n\nexport { AppUI }; // export nombrado\n","import React from 'react';\nimport { AppUI } from './AppUI';\nimport { TodoProvider } from '../TodoContext'\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App message=\"Hola mundo\"/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}